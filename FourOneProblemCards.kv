WindowManager:
    ProblemCards:

<ProblemCards>:
    name: "ProblemCards"

    GridLayout:
        padding: ("20dp", "20dp", "20dp", "20dp")
        spacing: "10dp"
        rows: 3
        # using disabled rounded button to display question
        RoundedButtonQuestion:
            disabled: True
            font_size: 30
            text: root.question
            color: (25/255,44/255,132/255,1)
            
        Label:
            text: "Step 1 of x:"
            halign: 'center'
            valign: 'center'
            color: (0,0,0,1)
            size_hint: (1,0.2)

        BoxLayout:
            orientation: "vertical"
            spacing: "10dp"
            RoundedButton:
                text: root.strA
                on_release:
                    root.on_button_click()
                #   syntax for linking to another screen below
                #   app.root.current = "screenName"
            RoundedButton:
                text: root.strB
                on_release:
                    root.clicked()
            RoundedButton:
                text: root.strC
            RoundedButton:
                text: root.strD

# similar styling to rounded buttons in choose your level screen
<RoundedButton@Button>
    background_color:(0,0,0,0)
    background_normal: ''
    halign: 'center'
    valign: 'center'
    # canvas is a container for instructions. Use canvas.before to add instructions rendered before with self. 
    canvas.before:
        Color:
            rgba: (25/255,44/255,132/255,1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            # change radius to change roundness of the button
            radius: [28]
    # wraps the text in the button so longer texts can be displayed
    text_size: self.width, None

# display for question
<RoundedButtonQuestion@Button>
    background_color:(0,0,0,0)
    background_normal: ''
    halign: 'center'
    valign: 'center'
    canvas.before:
        Color:
            rgba: (76/255,92/255,165/255,0.8)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [20]
    # wraps the text in the button so longer texts can be displayed
    text_size: self.width, None